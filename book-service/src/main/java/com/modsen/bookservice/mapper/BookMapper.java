package com.modsen.bookservice.mapper;

import com.modsen.bookservice.dto.request.BookRequest;
import com.modsen.bookservice.dto.response.BookResponse;
import com.modsen.bookservice.model.Book;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;

/**
 * Mapper interface for converting between Book entities and Data Transfer Objects (DTOs).
 * This interface uses the AuthorMapper for mapping Author-related data.
 */
@Mapper(componentModel = "spring", uses = {AuthorMapper.class})
public interface BookMapper {

    /**
     * Converts a Book entity to a BookResponse DTO.
     *
     * @param book the Book entity to convert
     * @return the converted BookResponse DTO
     */
    BookResponse toResponse(Book book);

    /**
     * Converts a BookRequest DTO to a Book entity.
     * The 'id' field in the Book entity is ignored during mapping,
     * as it is typically generated by the database.
     *
     * @param bookRequest the BookRequest DTO to convert
     * @return the converted Book entity
     */
    @Mapping(target = "id", ignore = true)
    Book toEntity(BookRequest bookRequest);
}
